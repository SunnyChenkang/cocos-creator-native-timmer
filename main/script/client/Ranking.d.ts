//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


/**
 * 游戏排行相关服务接口对象
 */
export default class RankingClient {
  input: Thrift.TJSONProtocol;
  output: Thrift.TJSONProtocol;
  seqid: number;

  constructor(input: Thrift.TJSONProtocol, output?: Thrift.TJSONProtocol);

  /**
   * 获取游戏场次指定分页的日排行数据
   * 
   * @param uid 玩家ID
   * @param zoneId 游戏场次ID
   * @param pageNo 需要获取数据的分页号
   * @return 指定分页的排行数据
   */
  listDailyRanking(uid: number, zoneId: number, pageNo: any): string;

  /**
   * 获取游戏场次指定分页的日排行数据
   * 
   * @param uid 玩家ID
   * @param zoneId 游戏场次ID
   * @param pageNo 需要获取数据的分页号
   * @return 指定分页的排行数据
   */
  listDailyRanking(uid: number, zoneId: number, pageNo: any, callback: Function): void;

  /**
   * 按指定的方式获取日排行，指定偏移量和获取的数量
   * 
   * @param zoneId 游戏场次ID
   * @param offset 需要获取的排行偏移量
   * @param size 需要获取的排行个数
   * 
   */
  listSpecifiedDailyRanking(zoneId: number, offset: number, size: number): string;

  /**
   * 按指定的方式获取日排行，指定偏移量和获取的数量
   * 
   * @param zoneId 游戏场次ID
   * @param offset 需要获取的排行偏移量
   * @param size 需要获取的排行个数
   * 
   */
  listSpecifiedDailyRanking(zoneId: number, offset: number, size: number, callback: Function): void;

  /**
   * 获取游戏场次指定分页的总排行数据
   * 
   * @param uid 玩家ID
   * @param zoneId 游戏场次ID
   * @param pageNo 需要获取数据的分页号
   * @return 指定分页的排行数据
   */
  listTotalRanking(uid: number, zoneId: number, pageNo: any): string;

  /**
   * 获取游戏场次指定分页的总排行数据
   * 
   * @param uid 玩家ID
   * @param zoneId 游戏场次ID
   * @param pageNo 需要获取数据的分页号
   * @return 指定分页的排行数据
   */
  listTotalRanking(uid: number, zoneId: number, pageNo: any, callback: Function): void;
}
